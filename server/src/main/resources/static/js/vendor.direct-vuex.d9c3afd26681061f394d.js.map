{"version":3,"sources":["webpack:///./node_modules/direct-vuex/dist/direct-vuex.esm.js"],"names":["createDirectStore","options","original","Store","store","state","getters","toDirectGetters","commit","toDirectCommit","dispatch","toDirectDispatch","direct","rootGetterContext","getModuleGetterContext","moduleGetterContext","args","moduleOptions","rootActionContext","originalContext","getModuleActionContext","moduleActionContext","localGetterContext","undefined","localActionContext","defineModule","defineModules","modules","defineGetters","defineMutations","mutations","defineActions","actions","createModule","obsolete","createModules","createGetters","createMutations","createActions","fn","oldName","newName","console","warn","directVuex","gettersCache","WeakMap","originalGetters","get","gettersFromOptions","result","hierarchy","gettersImpl","prefix","length","join","name","Object","keys","defineProperties","createDirectGetters","moduleName","namespaced","set","commitCache","originalCommit","commitFromOptions","rootCommitCache","originalCommitCall","mutationsImpl","payload","createDirectMutations","dispatchCache","originalDispatch","dispatchFromOptions","rootDispatchCache","originalDispatchCall","actionsImpl","createDirectActions","getterContextCache","rootOptions","rootState","rootGetters","context","actionContextCache","mutation","root","toDirectRootCommit","toDirectRootDispatch"],"mappings":"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","file":"js/vendor.direct-vuex.d9c3afd26681061f394d.js","sourcesContent":["import Vuex from 'vuex';\n\nfunction createDirectStore(options) {\n    const original = new Vuex.Store(options);\n    const store = {\n        get state() {\n            return original.state;\n        },\n        getters: toDirectGetters(options, original.getters),\n        commit: toDirectCommit(options, original.commit),\n        dispatch: toDirectDispatch(options, original.dispatch),\n        original\n    };\n    original.direct = store;\n    return {\n        store,\n        rootGetterContext: ([state, getters]) => getModuleGetterContext([state, getters, state, getters], options, options),\n        moduleGetterContext: (args, moduleOptions) => getModuleGetterContext(args, moduleOptions, options),\n        rootActionContext: (originalContext) => getModuleActionContext(originalContext, options, options),\n        moduleActionContext: (originalContext, moduleOptions) => getModuleActionContext(originalContext, moduleOptions, options),\n    };\n}\nfunction localGetterContext([state, getters], options) {\n    return getModuleGetterContext([state, getters, undefined, undefined], options);\n}\nfunction localActionContext(originalContext, options) {\n    return getModuleActionContext(originalContext, options);\n}\nfunction defineModule(options) {\n    return options;\n}\nfunction defineModules() {\n    return modules => modules;\n}\nfunction defineGetters() {\n    return getters => getters;\n}\nfunction defineMutations() {\n    return mutations => mutations;\n}\nfunction defineActions(actions) {\n    return actions;\n}\nconst createModule = obsolete(defineModule, \"createModule\", \"defineModule\");\nconst createModules = obsolete(defineModules, \"createModules\", \"defineModules\");\nconst createGetters = obsolete(defineGetters, \"createGetters\", \"defineGetters\");\nconst createMutations = obsolete(defineMutations, \"createMutations\", \"defineMutations\");\nconst createActions = obsolete(defineActions, \"createActions\", \"defineActions\");\nfunction obsolete(fn, oldName, newName) {\n    return ((...args) => {\n        // tslint:disable-next-line:no-console\n        console.warn(`Function '${oldName}' is obsolete, please use '${newName}'.`);\n        return fn(...args);\n    });\n}\nvar directVuex = {\n    createDirectStore, defineModule, defineModules, defineGetters, defineMutations, defineActions,\n    localGetterContext, localActionContext,\n    createModule, createModules, createGetters, createMutations, createActions\n};\n// Getters\nconst gettersCache = new WeakMap();\nfunction toDirectGetters(options, originalGetters) {\n    let getters = gettersCache.get(originalGetters);\n    // console.log(\">> to-getters\", getters ? \"FROM_CACHE\" : \"CREATE\", options)\n    if (!getters) {\n        getters = gettersFromOptions({}, options, originalGetters);\n        gettersCache.set(originalGetters, getters);\n    }\n    return getters;\n}\nfunction gettersFromOptions(result, options, originalGetters, hierarchy = []) {\n    if (options.getters)\n        createDirectGetters(result, options.getters, originalGetters, hierarchy);\n    if (options.modules) {\n        for (const moduleName of Object.keys(options.modules)) {\n            const moduleOptions = options.modules[moduleName];\n            if (moduleOptions.namespaced)\n                result[moduleName] = gettersFromOptions({}, moduleOptions, originalGetters, [...hierarchy, moduleName]);\n            else\n                gettersFromOptions(result, moduleOptions, originalGetters, hierarchy);\n        }\n    }\n    return result;\n}\nfunction createDirectGetters(result, gettersImpl, originalGetters, hierarchy) {\n    const prefix = !hierarchy || hierarchy.length === 0 ? \"\" : `${hierarchy.join(\"/\")}/`;\n    for (const name of Object.keys(gettersImpl)) {\n        Object.defineProperties(result, {\n            [name]: {\n                get: () => originalGetters[`${prefix}${name}`]\n            }\n        });\n    }\n}\n// Mutations\nconst commitCache = new WeakMap();\nfunction toDirectCommit(options, originalCommit) {\n    let commit = commitCache.get(originalCommit);\n    // console.log(\">> to-commit\", commit ? \"FROM_CACHE\" : \"CREATE\", options)\n    if (!commit) {\n        commit = commitFromOptions({}, options, originalCommit);\n        commitCache.set(originalCommit, commit);\n    }\n    return commit;\n}\nconst rootCommitCache = new WeakMap();\nfunction toDirectRootCommit(rootOptions, originalCommit) {\n    let commit = rootCommitCache.get(originalCommit);\n    // console.log(\">> to-rootCommit\", commit ? \"FROM_CACHE\" : \"CREATE\", rootOptions)\n    if (!commit) {\n        const origCall = (mutation, payload) => originalCommit(mutation, payload, { root: true });\n        commit = commitFromOptions({}, rootOptions, origCall);\n        rootCommitCache.set(originalCommit, commit);\n    }\n    return commit;\n}\nfunction commitFromOptions(result, options, originalCommitCall, hierarchy = []) {\n    if (options.mutations)\n        createDirectMutations(result, options.mutations, originalCommitCall, hierarchy);\n    if (options.modules) {\n        for (const moduleName of Object.keys(options.modules)) {\n            const moduleOptions = options.modules[moduleName];\n            if (moduleOptions.namespaced)\n                result[moduleName] = commitFromOptions({}, moduleOptions, originalCommitCall, [...hierarchy, moduleName]);\n            else\n                commitFromOptions(result, moduleOptions, originalCommitCall, hierarchy);\n        }\n    }\n    return result;\n}\nfunction createDirectMutations(result, mutationsImpl, originalCommitCall, hierarchy) {\n    const prefix = !hierarchy || hierarchy.length === 0 ? \"\" : `${hierarchy.join(\"/\")}/`;\n    for (const name of Object.keys(mutationsImpl))\n        result[name] = (payload) => originalCommitCall(`${prefix}${name}`, payload);\n}\n// Actions\nconst dispatchCache = new WeakMap();\nfunction toDirectDispatch(options, originalDispatch) {\n    let dispatch = dispatchCache.get(originalDispatch);\n    // console.log(\">> to-dispatch\", dispatch ? \"FROM_CACHE\" : \"CREATE\", options)\n    if (!dispatch) {\n        dispatch = dispatchFromOptions({}, options, originalDispatch);\n        dispatchCache.set(originalDispatch, dispatch);\n    }\n    return dispatch;\n}\nconst rootDispatchCache = new WeakMap();\nfunction toDirectRootDispatch(rootOptions, originalDispatch) {\n    let dispatch = rootDispatchCache.get(originalDispatch);\n    // console.log(\">> to-rootDispatch\", dispatch ? \"FROM_CACHE\" : \"CREATE\", rootOptions)\n    if (!dispatch) {\n        const origCall = (mutation, payload) => originalDispatch(mutation, payload, { root: true });\n        dispatch = dispatchFromOptions({}, rootOptions, origCall);\n        rootDispatchCache.set(originalDispatch, dispatch);\n    }\n    return dispatch;\n}\nfunction dispatchFromOptions(result, options, originalDispatchCall, hierarchy = []) {\n    if (options.actions)\n        createDirectActions(result, options.actions, originalDispatchCall, hierarchy);\n    if (options.modules) {\n        for (const moduleName of Object.keys(options.modules)) {\n            const moduleOptions = options.modules[moduleName];\n            if (moduleOptions.namespaced)\n                result[moduleName] = dispatchFromOptions({}, moduleOptions, originalDispatchCall, [...hierarchy, moduleName]);\n            else\n                dispatchFromOptions(result, moduleOptions, originalDispatchCall, hierarchy);\n        }\n    }\n    return result;\n}\nfunction createDirectActions(result, actionsImpl, originalDispatchCall, hierarchy) {\n    const prefix = !hierarchy || hierarchy.length === 0 ? \"\" : `${hierarchy.join(\"/\")}/`;\n    for (const name of Object.keys(actionsImpl))\n        result[name] = (payload) => originalDispatchCall(`${prefix}${name}`, payload);\n}\n// GetterContext\nconst getterContextCache = new WeakMap();\nfunction getModuleGetterContext(args, options, rootOptions) {\n    const [state, getters, rootState, rootGetters] = args;\n    let context = actionContextCache.get(state);\n    // console.log(\">> to-getterContext\", context ? \"FROM_CACHE\" : \"CREATE\", options)\n    if (!context) {\n        if (rootOptions) {\n            context = {\n                get rootState() {\n                    return rootState;\n                },\n                get rootGetters() {\n                    return toDirectGetters(rootOptions, rootGetters);\n                },\n                get state() {\n                    return state;\n                },\n                get getters() {\n                    return toDirectGetters(options, getters);\n                }\n            };\n        }\n        else {\n            context = {\n                get state() {\n                    return state;\n                },\n                get getters() {\n                    return toDirectGetters(options, getters);\n                }\n            };\n        }\n        if (state) // Can be undefined in unit tests\n            getterContextCache.set(state, context);\n    }\n    return context;\n}\n// ActionContext\nconst actionContextCache = new WeakMap();\nfunction getModuleActionContext(originalContext, options, rootOptions) {\n    let context = actionContextCache.get(originalContext.state);\n    // console.log(\">> to-actionContext\", context ? \"FROM_CACHE\" : \"CREATE\", options)\n    if (!context) {\n        if (rootOptions) {\n            context = {\n                get rootState() {\n                    return originalContext.rootState;\n                },\n                get rootGetters() {\n                    return toDirectGetters(rootOptions, originalContext.rootGetters);\n                },\n                get rootCommit() {\n                    return toDirectRootCommit(rootOptions, originalContext.commit);\n                },\n                get rootDispatch() {\n                    return toDirectRootDispatch(rootOptions, originalContext.dispatch);\n                },\n                get state() {\n                    return originalContext.state;\n                },\n                get getters() {\n                    return toDirectGetters(options, originalContext.getters);\n                },\n                get commit() {\n                    return toDirectCommit(options, originalContext.commit);\n                },\n                get dispatch() {\n                    return toDirectDispatch(options, originalContext.dispatch);\n                }\n            };\n        }\n        else {\n            context = {\n                get state() {\n                    return originalContext.state;\n                },\n                get getters() {\n                    return toDirectGetters(options, originalContext.getters);\n                },\n                get commit() {\n                    return toDirectCommit(options, originalContext.commit);\n                },\n                get dispatch() {\n                    return toDirectDispatch(options, originalContext.dispatch);\n                }\n            };\n        }\n        if (originalContext.state) // Can be undefined in unit tests\n            actionContextCache.set(originalContext.state, context);\n    }\n    return context;\n}\n\nexport default directVuex;\nexport { createActions, createDirectStore, createGetters, createModule, createModules, createMutations, defineActions, defineGetters, defineModule, defineModules, defineMutations, localActionContext, localGetterContext };\n"],"sourceRoot":""}