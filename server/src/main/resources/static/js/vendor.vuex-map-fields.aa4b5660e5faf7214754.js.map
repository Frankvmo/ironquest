{"version":3,"sources":["webpack:///./node_modules/vuex-map-fields/dist/index.esm.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","_iterableToArrayLimit","TypeError","_nonIterableRest","arrayToObject","fields","arguments","reduce","prev","path","split","slice","Error","concat","normalizeNamespace","fn","_len","params","_key","_ref","_ref2","namespace","map","getterType","mutationType","charAt","getField","state","updateField","_ref3","index","array","mapFields","fieldsObject","keys","field","get","this","$store","getters","set","commit","mapMultiRowFields","paths","pathsObject","entries","store","fieldKey","fieldPath","createHelpers","_ref4","_ref5"],"mappings":"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","file":"js/vendor.vuex-map-fields.aa4b5660e5faf7214754.js","sourcesContent":["function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nfunction arrayToObject() {\n  var fields = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return fields.reduce(function (prev, path) {\n    var key = path.split(\".\").slice(-1)[0];\n\n    if (prev[key]) {\n      throw new Error(\"The key `\".concat(key, \"` is already in use.\"));\n    } // eslint-disable-next-line no-param-reassign\n\n\n    prev[key] = path;\n    return prev;\n  }, {});\n}\n\nfunction normalizeNamespace(fn) {\n  return function () {\n    for (var _len = arguments.length, params = new Array(_len), _key = 0; _key < _len; _key++) {\n      params[_key] = arguments[_key];\n    }\n\n    // eslint-disable-next-line prefer-const\n    var _ref = typeof params[0] === \"string\" ? [].concat(params) : [\"\"].concat(params),\n        _ref2 = _slicedToArray(_ref, 4),\n        namespace = _ref2[0],\n        map = _ref2[1],\n        getterType = _ref2[2],\n        mutationType = _ref2[3];\n\n    if (namespace.length && namespace.charAt(namespace.length - 1) !== \"/\") {\n      namespace += \"/\";\n    }\n\n    getterType = \"\".concat(namespace).concat(getterType || \"getField\");\n    mutationType = \"\".concat(namespace).concat(mutationType || \"updateField\");\n    return fn(namespace, map, getterType, mutationType);\n  };\n}\n\nfunction getField(state) {\n  return function (path) {\n    return path.split(/[.[\\]]+/).reduce(function (prev, key) {\n      return prev[key];\n    }, state);\n  };\n}\nfunction updateField(state, _ref3) {\n  var path = _ref3.path,\n      value = _ref3.value;\n  path.split(/[.[\\]]+/).reduce(function (prev, key, index, array) {\n    if (array.length === index + 1) {\n      // eslint-disable-next-line no-param-reassign\n      prev[key] = value;\n    }\n\n    return prev[key];\n  }, state);\n}\nvar mapFields = normalizeNamespace(function (namespace, fields, getterType, mutationType) {\n  var fieldsObject = Array.isArray(fields) ? arrayToObject(fields) : fields;\n  return Object.keys(fieldsObject).reduce(function (prev, key) {\n    var path = fieldsObject[key];\n    var field = {\n      get: function get() {\n        return this.$store.getters[getterType](path);\n      },\n      set: function set(value) {\n        this.$store.commit(mutationType, {\n          path: path,\n          value: value\n        });\n      }\n    }; // eslint-disable-next-line no-param-reassign\n\n    prev[key] = field;\n    return prev;\n  }, {});\n});\nvar mapMultiRowFields = normalizeNamespace(function (namespace, paths, getterType, mutationType) {\n  var pathsObject = Array.isArray(paths) ? arrayToObject(paths) : paths;\n  return Object.keys(pathsObject).reduce(function (entries, key) {\n    var path = pathsObject[key]; // eslint-disable-next-line no-param-reassign\n\n    entries[key] = {\n      get: function get() {\n        var store = this.$store;\n        var rows = store.getters[getterType](path);\n        return rows.map(function (fieldsObject, index) {\n          return Object.keys(fieldsObject).reduce(function (prev, fieldKey) {\n            var fieldPath = \"\".concat(path, \"[\").concat(index, \"].\").concat(fieldKey);\n            return Object.defineProperty(prev, fieldKey, {\n              get: function get() {\n                return store.getters[getterType](fieldPath);\n              },\n              set: function set(value) {\n                store.commit(mutationType, {\n                  path: fieldPath,\n                  value: value\n                });\n              }\n            });\n          }, {});\n        });\n      }\n    };\n    return entries;\n  }, {});\n});\nvar createHelpers = function createHelpers(_ref4) {\n  var _ref5;\n\n  var getterType = _ref4.getterType,\n      mutationType = _ref4.mutationType;\n  return _ref5 = {}, _defineProperty(_ref5, getterType, getField), _defineProperty(_ref5, mutationType, updateField), _defineProperty(_ref5, \"mapFields\", normalizeNamespace(function (namespace, fields) {\n    return mapFields(namespace, fields, getterType, mutationType);\n  })), _defineProperty(_ref5, \"mapMultiRowFields\", normalizeNamespace(function (namespace, paths) {\n    return mapMultiRowFields(namespace, paths, getterType, mutationType);\n  })), _ref5;\n};\n\nexport { createHelpers, getField, mapFields, mapMultiRowFields, updateField };\n"],"sourceRoot":""}